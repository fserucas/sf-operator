---
- name: Start a tenant config check
  ansible.builtin.command: kubectl apply -f playbooks/files/configCheckJob.yaml
  args:
    chdir: "{{ zuul.project.src_dir | default('..') }}"
- name: Wait for the job to be ready
  ansible.builtin.command: kubectl get ConfigCheckJob tenant-conf-check-01 -o=jsonpath='{.status}'
  register: ccj_ready
  until:
    - ccj_ready.stdout != ""
    - (ccj_ready.stdout | from_json).ready == true
  retries: 10
  delay: 5
- name: Wait for successful job outcome
  ansible.builtin.command: kubectl get ConfigCheckJob tenant-conf-check-01 -o=jsonpath='{.status}'
  register: ccj_outcome
  until:
    - ccj_outcome != ""
    - (ccj_outcome.stdout | from_json).outcome == "SUCCESS"
  retries: 10
  delay: 5
- name: Get job Pod ID
  ansible.builtin.set_fact:
    podID: "{{ (ccj_outcome.stdout | from_json).podID }}"
- name: Ensure Zuul job logs are as expected
  ansible.builtin.command: kubectl logs {{ podID }} -c zuul-config-check
  register: zuul_job_logs
  until:
    - zuul_job_logs.stdout != ""
    - zuul_job_logs.stdout == "Tenants config validated with success"
  retries: 10
  delay: 5
- name: Wait for job to be removed automatically
  ansible.builtin.command: sleep 60
- name: Ensure resources were cleaned up after TTL expired
  ansible.builtin.command: kubectl get ConfigCheckJob -ojsonpath='{.items}'
  register: ccj_count
  failed_when: ccj_count.stdout != '[]'