- include_role:
    name: "roles/{{ role }}"
  loop:
    - setup/manage-hosts
    - setup/get-gerrit-admin-user-api-key
    - health-check/check-service-uri
    - health-check/config-repo-get-or-reset
  loop_control:
    loop_var: role

- set_fact:
    random: "{{ lookup('community.general.random_string', special=false, length=8) }}"

- name: create vars to generatel and submit resources addition
  set_fact:
    config_file_path: "resources/myfile-{{ random }}.yaml"
    repository_name: "ichiban-config-{{ random }}"

- include_role:
    name: "roles/{{ role }}"
  loop:
    - health-check/config-repo-create-resources
    - health-check/config-repo-submit-change
  loop_control:
    loop_var: role

- name: Ensure repository exists in Gerrit
  uri:
    url: "https://{{ gerrit_host }}/projects/{{ repository_name }}"
    validate_certs: "{{ validate_certs }}"
    method: GET
  retries: 10

- name: Get Zuul projects list
  uri:
    url: "https://{{ zuul_host }}/api/tenant/internal/projects"
    validate_certs: "{{ validate_certs }}"
    method: GET
  register: zuul_internal_projects
  retries: 10

- name: Ensure project exists in Zuul (fail if not)
  fail:
    msg: "Project not found in Zuul"
  when: not (zuul_internal_projects.json | selectattr('name', 'equalto', repository_name) | length == 1)

- name: Ensure job results exists in Logserver
  ansible.builtin.uri:
    url: "{{ item.log_url }}/job-output.txt.gz"
    validate_certs: "{{ validate_certs }}"
    method: GET
  retries: 10
  loop: "{{ zuul_job_result.json | list }}"

- include_role:
    name: "roles/health-check/validate-purgelogs"
