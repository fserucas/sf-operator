- name: Reset  config_path checkout and update to origin/master
  block:
    - set_fact:
        config_url: "https://admin:{{ gerrit_admin_api_key }}@{{ gerrit_host}}/a/config"

    - name: "Check if {{ config_path }} exists"
      stat:
        path: "{{ config_path }}"
      register: _config_exists

    - name: Clone config repo
      command: "git -c http.sslVerify=false clone {{ config_url }} {{ config_path }}"
      when: _config_exists.stat.isdir is not defined

    # TODO debug for it should work but fails with 'SSL certificate problem'
    # - name: Clone config repo
    #   git:
    #     repo: "{{ config_url }}"
    #     dest: "{{ config_path }}"
    #     # TODO could be remove if cert is trusted
    #     accept_hostkey: yes
    #     update: no

    # TODO could be remove if cert is trusted
    - name: config repo, ensure config repo cert is trusted
      command: git config http.sslverify false
      args:
        chdir: "{{ config_path }}"

    - name: config repo, add git remote
      command: "git remote add gerrit {{ config_url }}"
      register: _git_remote
      args:
        chdir: "{{ config_path }}"
      # 0 success, 3 remote exists
      failed_when: _git_remote.rc not in [0,3]

    - name: config repo, set user
      shell: "{{ git_user }}"
      args:
        chdir: "{{ config_path }}"
      loop:
        - git config user.email "admin@sftests.com"
        - git config user.name "admin"
      loop_control:
        loop_var: git_user

    - name: config repo, reset
      command: "{{ git_cmd }}"
      args:
        chdir: "{{ config_path }}"
      loop:
        - git fetch --all
        - git checkout master
        - git reset --hard origin/master --
        - git clean -f -d
      loop_control:
        loop_var: git_cmd
