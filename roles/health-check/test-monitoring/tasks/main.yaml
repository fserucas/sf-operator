---
- name: Ensure prometheus instance exists
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig }}"
    kind: Prometheus
    name: prometheus
    namespace: sf

- name: Ensure instance is reachable via route
  ansible.builtin.uri:
    url: https://{{ prometheus_host }}
    status_code: [302, 200]
    validate_certs: "{{ validate_certs }}"

- name: Fetch defined Prometheus targets
  ansible.builtin.shell: curl -k https://{{ prometheus_host }}/api/v1/targets | jq '.data.activeTargets[] | select(.labels.container == "{{ item }}") | .health'
  register: target_health
  failed_when: "\"up\" not in target_health.stdout"
  loop:
    - "zuul-web"
    - "zuul-executor"
    - "zuul-scheduler"
    - "logserver-nodeexporter"

- name: Fetch defined alerts for logserver
  ansible.builtin.shell: curl -k https://prometheus.sfop.dev/api/v1/rules | jq '.data.groups[] | select(.name == "disk.rules") | .rules[] | select(.name == "{{ item }}") | .health'
  register: logserver_alert
  failed_when: "\"ok\" not in logserver_alert.stdout"
  loop:
    - "OutOfDiskNow"
    - "OutOfDiskInThreeDays"
