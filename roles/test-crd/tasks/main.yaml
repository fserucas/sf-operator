---
- name: Get current volume size
  ansible.builtin.shell: >
    kubectl get pvc logserver
    --output custom-columns=CAPACITY:.status.capacity.storage
    --no-headers | sed 's/[^0-9]\+//'
  register: logserver_capacity

- name: Set volume size
  ansible.builtin.set_fact:
    volume_size: "{{ logserver_capacity.stdout | int }}"

- name: Ensure LogServer was spawned with custom storage size
  ansible.builtin.command: |
    kubectl get pvc logserver --output custom-columns=CAPACITY:.status.capacity.storage --no-headers
  register: logserver_capacity
  # The default storage size asked by the SF controller is 1GB
  failed_when: logserver_capacity.stdout == '1Gi'

- name: Ensure it is impossible to shrink storage size in sf CR
  ansible.builtin.command: |
    kubectl patch SoftwareFactory my-sf --type=merge -p '{"spec": {"logserver": {"storage": {"size": "1Gi"}}}}'
  register: patch_result
  failed_when: "('shrinking is not supported' not in patch_result.stderr) and ('shrinking is not supported' not in patch_result.stdout)"

- name: Ensure it is impossible to set a negative loopDelay
  ansible.builtin.command: |
    kubectl patch SoftwareFactory my-sf --type=merge -p '{"spec": {"logserver": {"loopDelay": -1}}}'
  register: ld_patch_result
  failed_when: "('must be a positive integer' not in ld_patch_result.stderr) and ('must be a positive integer' not in ld_patch_result.stdout)"

- name: Ensure it is impossible to set a negative retentionDays
  ansible.builtin.command: |
    kubectl patch SoftwareFactory my-sf --type=merge -p '{"spec": {"logserver": {"retentionDays": -1}}}'
  register: rd_patch_result
  failed_when: "('must be a positive integer' not in rd_patch_result.stderr) and ('must be a positive integer' not in rd_patch_result.stdout)"

- name: Ensure it is impossible to create an instance with a negative loopDelay
  shell: |
    kubectl apply -f - <<EOF
    ---
    apiVersion: sf.softwarefactory-project.io/v1
    kind: SoftwareFactory
    metadata:
      name: my-sf-bad-ld
    spec:
      storageClassName: "topolvm-provisioner"
      fqdn: "sftests.com"
      zuul:
        gerritconns: []
      logserver:
        loopDelay: -3
        storage:
          size: {{ volume_size }}Gi
    EOF
  register: bad_apply_result
  failed_when: "('must be a positive integer' not in bad_apply_result.stderr) and ('must be a positive integer' not in bad_apply_result.stdout)"

- name: Ensure it is impossible to create an instance with a negative retentionDays
  shell: |
    kubectl apply -f - <<EOF
    ---
    apiVersion: sf.softwarefactory-project.io/v1
    kind: SoftwareFactory
    metadata:
      name: my-sf-bad-rd
    spec:
      storageClassName: "topolvm-provisioner"
      fqdn: "sftests.com"
      zuul:
        gerritconns: []
      logserver:
        retentionDays: -3
        storage:
          size: {{ volume_size }}Gi
    EOF
  register: bad_apply_result
  failed_when: "('must be a positive integer' not in bad_apply_result.stderr) and ('must be a positive integer' not in bad_apply_result.stdout)"
