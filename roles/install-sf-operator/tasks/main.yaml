- name: Install dependencies
  become: true
  block:
    - name: Install packages
      package:
        name:
          - golang
          - make
          - podman
          # for testing
          - jq
          - python3-pip

    - name: Install pip packages
      pip:
        name:
          - git-review
          - websocket-client
  when: install_requirements | bool == true

- name: Run make
  command: make
  args:
    chdir: "{{ zuul.project.src_dir }}"

- name: Check for diff
  command: git diff
  args:
    chdir: "{{ zuul.project.src_dir }}"
  register: render_diff

- name: Abort on diff
  when:
    - render_diff.stdout
  failed_when: true
  debug:
    msg: |
      The repository content is not consistent.
      Please commit the change made after running `make`.

      {{ render_diff.stdout }}

- name: Check cluster access
  command: kubectl cluster-info

- name: Create namespace
  shell: |
    kubectl create namespace sf
    kubectl config set-context microshift --namespace=sf
    kubectl label --overwrite ns sf pod-security.kubernetes.io/enforce=privileged
    kubectl label --overwrite ns sf pod-security.kubernetes.io/enforce-version=v1.24
    oc adm policy add-scc-to-user privileged -z default

- name: Install cert-manager operator
  command: make install-cert-manager
  args:
    chdir: "{{ zuul.project.src_dir }}"

# Attempt to mitigate error
# 'failed calling webhook "mutate.webhooks.cert-manager.io": failed to call webhook: Post "https://cert-manager-webhook-service.operators.svc:443/mutate?timeout=10s": no endpoints available for service "cert-manager-webhook-service"'
- name: Ensure cert-manager webhooks deployment ready
  command: kubectl -n operators get deployment cert-manager-webhook -o yaml
  register: cert_manager_dep
  until: "'readyReplicas: 1' in cert_manager_dep.stdout"
  retries: 10
  delay: 2

- name: Build the operator image locally
  community.general.make:
    target: operator-build
    chdir: "{{ zuul.project.src_dir }}"
  when: build_image_locally | bool == true
  become: yes

- name: "Build sf-operator image on {{ microshift_host }}"
  block:
    # it's not possible to use synchronize here for the “local host” is the host `the synchronize task originates on`, and the “destination host” is the host `synchronize is connecting to`. Aslo the “local host” can be changed to a different host by using `delegate_to` and that's not what we want to do
    - name: "Sync sf-operator to {{ microshift_host }} instance"
      command: "rsync -av ../../sf-operator/ {{ microshift_host }}:/tmp/sf-operator/ --exclude=.git --delete"

    - name: build sf-operator image
      community.general.make:
        target: operator-build
        chdir: /tmp/sf-operator
      become: yes
      delegate_to: "{{ microshift_host }}"
  when: build_image_locally | bool == false

- name: Install the operator
  community.general.make:
    target: deploy
    chdir: "{{ zuul.project.src_dir }}"
