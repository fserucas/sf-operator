---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: logservers.sf.softwarefactory-project.io
spec:
  group: sf.softwarefactory-project.io
  names:
    kind: LogServer
    listKind: LogServerList
    plural: logservers
    shortNames:
    - logss
    singular: logserver
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    - description: Status
      jsonPath: .status.conditions[0].status
      name: Status
      type: string
    - description: Message
      jsonPath: .status.conditions[0].message
      name: Message
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: LogServer is the Schema for the LogServers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LogServerSpec defines the desired state of LogServer
            properties:
              LetsEncrypt:
                description: LetsEncrypt settings for enabling using LetsEncrypt for
                  Routes/TLS
                properties:
                  server:
                    description: 'Specify the Lets encrypt server. Valid values are:
                      "staging", "prod"'
                    enum:
                    - prod
                    - staging
                    type: string
                required:
                - server
                type: object
              authorizedSSHKey:
                description: The SSH public key, encoded as base64, to use to authorize
                  file transfers on the log server
                type: string
              fqdn:
                description: The fully qualified domain name to use with the log server.
                  Logs will be served at https://logserver.`FQDN`
                type: string
              settings:
                description: General runtime settings for the log server
                properties:
                  loopDelay:
                    default: 3600
                    description: The frequency, in seconds, at which the log pruning
                      cronjob is running. Defaults to 3600s, i.e. logs are checked
                      for pruning every hour
                    minimum: 1
                    type: integer
                  retentionDays:
                    default: 60
                    description: Logs retention time in days. Logs older than this
                      setting in days will be purged by a pruning cronjob. Defaults
                      to 60 days
                    minimum: 1
                    type: integer
                  storage:
                    description: Storage-related settings
                    properties:
                      className:
                        description: Default storage class to use with Persistent
                          Volume Claims issued by this resource. Consult your cluster's
                          configuration to see what storage classes are available
                          and recommended for your use case.
                        type: string
                      size:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Storage space to allocate to the resource, expressed
                          as a [Quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/)
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    required:
                    - size
                    type: object
                type: object
              storageClassName:
                description: Default storage class to use with Persistent Volume Claims
                  issued by this resource. Consult your cluster's configuration to
                  see what storage classes are available and recommended for your
                  use case.
                type: string
            required:
            - authorizedSSHKey
            - fqdn
            type: object
          status:
            description: LogServerStatus defines the observed state of a Log server
            properties:
              conditions:
                description: Information about ongoing or completed reconciliation
                  processes between the Log server spec and the observed state of
                  the cluster
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: The Generation of the related Custom Resource that was
                  last processed by the operator controller
                format: int64
                type: integer
              ready:
                description: The deployment status.
                type: boolean
              reconciledBy:
                description: The name of the operator handling this Custom Resource's
                  reconciliation
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
