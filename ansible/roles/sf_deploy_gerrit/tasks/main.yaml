- name: Deploy Gerrit
  k8s:
    definition:
      apiVersion: "{{ sf_api_version }}"
      kind: "Gerrit"
      metadata:
        name: "{{ sf_cluster_name }}"
        namespace: "{{ namespace }}"
        labels:
          sf_cluster: "{{ sf_cluster_name }}"
      spec:
        size: 1
  # Remove this when gerrit crd are managed
  when: False

- name: Wait for Service
  set_fact:
    gerrit_service: "{{ lookup('k8s', api_version='v1', kind='Service', namespace=namespace, resource_name=sf_cluster_name+'-gerrit')}}"
  until: gerrit_service
  retries: 5
  delay: 10

- name: Create convenient fact
  set_fact:
    gerrit_ip: "{{ gerrit_service.spec.clusterIP }}"
    gerrit_api: "http://{{ gerrit_service.spec.clusterIP }}"
    gerrit_git: "ssh://admin@{{ gerrit_service.spec.clusterIP }}:29418"
    # TODO: load this from a secret to be created by the gerrit operator
    gerrit_admin_password: "admin"

- name: Wait for API
  uri:
    url: "{{ gerrit_api }}/a/config/server/version"
    method: GET
    user: admin
    password: "{{ gerrit_admin_password }}"
    force_basic_auth: yes
    return_content: yes
  register: gerrit_api_version
  until: "'2.16.7' in gerrit_api_version.content"
  retries: 5
  delay: 10

- name: Check for zuul account
  uri:
    url: "{{ gerrit_api }}/accounts/zuul"
    method: GET
  ignore_errors: yes
  register: gerrit_zuul_account

- name: Create zuul gerrit account
  #when: gerrit_zuul_account.status == 404
  block:
    - name: Create zuul ssh key
      vars:
        key_name: "{{ sf_cluster_name }}-zuul"
        key_comment: "zuul"
        secret_name: "{{ sf_cluster_name }}-zuul-ssh-secret"
        k8s_labels:
          app: "{{ sf_cluster_name }}-zuul"
          zuul_cluster: "{{ sf_cluster_name }}-zuul"
      import_role:
        name: create_ssh_key

    - name: Create zuul account
      uri:
        url: "{{ gerrit_api }}/a/accounts/zuul"
        method: PUT
        user: admin
        password: "{{ gerrit_admin_password }}"
        force_basic_auth: yes
        status_code: 201
        body_format: json
        body:
          name: "Zuul CI"
          email: "zuul@{{ fqdn }}"
          ssh_key: "{{ lookup('file', '/opt/ansible/ssh-' + sf_cluster_name + '-zuul.pub') }}"
          groups:
            - "Non-Interactive Users"
